<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on My Badly Drawn Self</title>
    <link>https://badlydrawnrod.github.io/categories/notes/</link>
    <description>Recent content in Notes on My Badly Drawn Self</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Feb 2022 15:00:00 +0000</lastBuildDate>
    <atom:link href="https://badlydrawnrod.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mandatory Copy Elision in C&#43;&#43;</title>
      <link>https://badlydrawnrod.github.io/posts/2022/02/27/mandatory-copy-elision/</link>
      <pubDate>Sun, 27 Feb 2022 15:00:00 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2022/02/27/mandatory-copy-elision/</guid>
      <description>&lt;p&gt;A look behind the scenes of mandatory copy elision.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CTAD and Deduction Guides in C&#43;&#43;</title>
      <link>https://badlydrawnrod.github.io/posts/2022/01/23/ctad/</link>
      <pubDate>Sun, 23 Jan 2022 14:25:00 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2022/01/23/ctad/</guid>
      <description>&lt;p&gt;A brief look at CTAD and deduction guides.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forgettable Git</title>
      <link>https://badlydrawnrod.github.io/posts/2022/01/16/git/</link>
      <pubDate>Sun, 16 Jan 2022 16:07:39 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2022/01/16/git/</guid>
      <description>&lt;p&gt;Git commands that I usually forget.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bump Allocators in C&#43;&#43;</title>
      <link>https://badlydrawnrod.github.io/posts/2021/12/30/monotonic_buffer_resource/</link>
      <pubDate>Thu, 30 Dec 2021 16:30:00 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2021/12/30/monotonic_buffer_resource/</guid>
      <description>&lt;p&gt;How do I implement a C++ bump allocator that works with standard library containers?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polymorphic Allocators in C&#43;&#43;</title>
      <link>https://badlydrawnrod.github.io/posts/2021/12/28/allocators/</link>
      <pubDate>Tue, 28 Dec 2021 14:15:00 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2021/12/28/allocators/</guid>
      <description>&lt;p&gt;C++17 introduced polymorphic allocators, but what problem do they solve?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring Module Linkage in C&#43;&#43;20</title>
      <link>https://badlydrawnrod.github.io/posts/2021/12/19/cpp-modules-2/</link>
      <pubDate>Sat, 18 Dec 2021 16:00:00 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2021/12/19/cpp-modules-2/</guid>
      <description>&lt;p&gt;C++20 introduced the idea of module linkage, but it seems to be somewhat inconsistently implemented.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Compiling C&#43;&#43;20 Modules with clang and MSVC</title>
      <link>https://badlydrawnrod.github.io/posts/2021/12/12/cpp-modules/</link>
      <pubDate>Sun, 12 Dec 2021 11:47:42 +0000</pubDate>
      <guid>https://badlydrawnrod.github.io/posts/2021/12/12/cpp-modules/</guid>
      <description>&lt;p&gt;Command lines for compiling and using C++20 modules from both clang and MSVC.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
